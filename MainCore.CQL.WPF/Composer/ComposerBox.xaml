<UserControl x:Class="MainCore.CQL.WPF.Composer.ComposerBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MainCore.CQL.WPF.Composer"
             xmlns:syntax="clr-namespace:MainCore.CQL.SyntaxTree;assembly=MainCore.CQL"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d" 
             BorderThickness="1"
             BorderBrush="Black" 
             Padding="1"
             x:Name="self"
             d:DesignHeight="28" d:DesignWidth="100">
    <Grid DataContext="{Binding Path=., ElementName=self}">
        <TextBlock Text="Please initialize Context and Query!" Foreground="Red">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Uninitialized">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock Text="Can not display query. It is too complex!" Foreground="Green">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="CanNotDisplay">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <ItemsControl ItemsSource="{Binding Filters}">
            <ItemsControl.Resources>
                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"/>
                <DataTemplate DataType="{x:Type syntax:BinaryOperator}">
                    <TextBlock FontSize="10">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding .}" Value="Contains">
                                        <Setter Property="Text" Value="CONTAINS"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="DoesNotContain">
                                        <Setter Property="Text" Value="DOES NOT CONTAIN"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Is">
                                        <Setter Property="Text" Value="IS"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="In">
                                        <Setter Property="Text" Value="IN"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="NotIn">
                                        <Setter Property="Text" Value="NOT IN"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Or">
                                        <Setter Property="Text" Value="OR"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="And">
                                        <Setter Property="Text" Value="AND"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Equals">
                                        <Setter Property="Text" Value="="/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="NotEquals">
                                        <Setter Property="Text" Value="!="/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="GreaterThan">
                                        <Setter Property="Text" Value="&#62;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="GreaterThanEquals">
                                        <Setter Property="Text" Value="&#8805;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="LessThan">
                                        <Setter Property="Text" Value="&#x3c;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="LessThanEquals">
                                        <Setter Property="Text" Value="&#x2264;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Add">
                                        <Setter Property="Text" Value="+"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Sub">
                                        <Setter Property="Text" Value="-"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Mul">
                                        <Setter Property="Text" Value="&#xd7;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Div">
                                        <Setter Property="Text" Value="&#xf7;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding .}" Value="Mod">
                                        <Setter Property="Text" Value="mod"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:FilterBoxViewModel}">
                    <local:FilterBox 
                        Context="{Binding Context}"
                        State="{Binding FilterState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsLast="{Binding IsLast}" 
                        IsNegated="{Binding Negate, Mode=TwoWay}" 
                        AddCommand="{Binding AddCommand, Mode=OneTime}" 
                        DeleteCommand="{Binding DeleteCommand, Mode=OneTime}"
                        DoneCommand="{Binding DoneCommand, Mode=OneTime}"
                        >
                        <Grid>
                            <ContentPresenter Content="{Binding QueryPart}">
                                <!-- EDITING VIEW -->
                                <ContentPresenter.Resources>
                                    <DataTemplate DataType="{x:Type local:BooleanLiteralViewModel}">
                                        <ComboBox SelectedValue="{Binding Value, Mode=TwoWay}" FontSize="10">
                                            <ComboBox.Items>
                                                <sys:Boolean>False</sys:Boolean>
                                                <sys:Boolean>True</sys:Boolean>
                                            </ComboBox.Items>
                                        </ComboBox>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type local:BooleanConstantViewModel}">
                                        <ComboBox SelectedValue="{Binding Constant, Mode=TwoWay}" FontSize="10" ItemsSource="{Binding Constants}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type local:FieldComparsionViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox FontSize="10" ItemsSource="{Binding PossibleFields}" SelectedItem="{Binding Field, Mode=TwoWay}">
                                                <ComboBox.Style>
                                                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                    </Style>
                                                </ComboBox.Style>
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Name}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                            <ComboBox FontSize="10" ItemsSource="{Binding PossibleOperators}" SelectedItem="{Binding Operator, Mode=TwoWay}">
                                                <ComboBox.Style>
                                                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding State}" Value="Phase1_FieldMissing">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ComboBox.Style>
                                            </ComboBox>
                                            <ComboBox FontSize="10" ItemsSource="{Binding PossibleValues}" SelectedItem="{Binding Value, Mode=TwoWay}">
                                                <ComboBox.Style>
                                                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding State}" Value="Phase1_FieldMissing">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding State}" Value="Phase2_OperatorMissing">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ComboBox.Style>
                                            </ComboBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentPresenter.Resources>
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType={x:Type local:FilterBox}}}" Value="Editing">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>

                            <ContentPresenter Content="{Binding QueryPart}">
                                <!-- SHOW VIEW -->
                                <ContentPresenter.Resources>
                                    <DataTemplate DataType="{x:Type local:BooleanLiteralViewModel}">
                                        <TextBlock Text="{Binding Value, Mode=OneWay}" FontSize="10" Padding="2"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type local:BooleanConstantViewModel}">
                                        <TextBlock Text="{Binding Constant.Name, Mode=OneWay}" FontSize="10" Padding="2" ToolTip="{Binding Constant.Usage}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type local:FieldComparsionViewModel}">
                                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Field.Usage}">
                                            <TextBlock Text="{Binding Field.Name, Mode=OneWay}" FontSize="10" Padding="2"/>
                                            <ContentPresenter Content="{Binding Operator, Mode=OneWay}"/>
                                            <TextBlock Text="{Binding Value, Mode=OneWay}" FontSize="10" Padding="2"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentPresenter.Resources>
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType={x:Type local:FilterBox}}}" Value="HasErrors">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType={x:Type local:FilterBox}}}" Value="ReadyToUse">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>
                        </Grid>
                    </local:FilterBox>
                </DataTemplate>
            </ItemsControl.Resources>
            <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Ok">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </ItemsControl.Style>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </Grid>
</UserControl>
